Call:   call void @checkLTLimit(i64 %idxprom93, i64 9), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom93), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom99, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom99), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom98, i64 9), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom98), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom105, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom105), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom104, i64 9), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom104), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom114, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom114), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom113, i64 10), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom113), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom120, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom120), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom119, i64 10), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom119), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom128, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom128), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom132, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom132), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom137, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom137), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom150, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom150), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom149, i64 10), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
Call:   call void @checkGTLimit(i64 0, i64 %idxprom149), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9)  }
Call:   call void @checkLTLimit(i64 %idxprom155, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom155), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom154, i64 10), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom154), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom161, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom161), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom160, i64 10), !VarName !{i32* %k, i64 9}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom160), !VarName !{i64 0, i32* %k}
Available Expressions: { (np.addr < 8) (0 <= np.addr) (k < 9) (0 <= k)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom205, i64 8), !VarName !{i32* %np.addr, i64 8}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom205), !VarName !{i64 0, i32* %np.addr}
Available Expressions: { (np.addr < 8) (0 <= np.addr)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom, i64 8), !VarName !{i32* %p, i64 8}
Available Expressions: {  }
Call:   call void @checkGTLimit(i64 0, i64 %idxprom), !VarName !{i64 0, i32* %p}
Available Expressions: { (p < 8)  }
Call:   call void @checkLTLimit(i64 %idxprom32, i64 8), !VarName !{i32* %p, i64 8}
Available Expressions: {  }
Call:   call void @checkGTLimit(i64 0, i64 %idxprom32), !VarName !{i64 0, i32* %p}
Available Expressions: { (p < 8)  }
Call:   call void @checkLTLimit(i64 %idxprom35, i64 8), !VarName !{i32* %p, i64 8}
Available Expressions: { (p < 8) (0 <= p)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom35), !VarName !{i64 0, i32* %p}
Available Expressions: { (p < 8) (0 <= p)  }
*** REMOVED ***
Call:   call void @checkLTLimit(i64 %idxprom38, i64 8), !VarName !{i32* %p, i64 8}
Available Expressions: { (p < 8) (0 <= p)  }
*** REMOVED ***
Call:   call void @checkGTLimit(i64 0, i64 %idxprom38), !VarName !{i64 0, i32* %p}
Available Expressions: { (p < 8) (0 <= p)  }
*** REMOVED ***
---------------------------------------------
REMOVED REDUNDANT CHECKS #: 78
---------------------------------------------
