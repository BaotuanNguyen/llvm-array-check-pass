; ModuleID = '<stdin>'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define i32 @main() nounwind uwtable {
entry:
  %i = alloca i32, align 4
  %a = alloca [100 x i32], align 16
  %temp = alloca i32, align 4
  %0 = load i32* %i, align 4, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  %add = add nsw i32 %0, 1, !EFFECT !{metadata !"INCREMENT", i32* %i, i64 1}
  %idxprom = sext i32 %add to i64, !EFFECT !{metadata !"INCREMENT", i32* %i, i64 1}
  call void @checkLessThan(i64 -1, i64 %idxprom), !VarName !{i64 -1, i32 %add}
  call void @checkLessThan(i64 %idxprom, i64 100), !VarName !{i32 %add, i64 100}
  %arrayidx = getelementptr inbounds [100 x i32]* %a, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  store i32 %1, i32* %temp, align 4
  %2 = load i32* %i, align 4, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  %idxprom1 = sext i32 %2 to i64, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  call void @checkLessThan(i64 -1, i64 %idxprom1), !VarName !{i64 -1, i32* %i}
  call void @checkLessThan(i64 %idxprom1, i64 99), !VarName !{i32* %i, i64 99}
  %arrayidx2 = getelementptr inbounds [100 x i32]* %a, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %4 = load i32* %i, align 4, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  %add3 = add nsw i32 %4, 1, !EFFECT !{metadata !"INCREMENT", i32* %i, i64 1}
  %idxprom4 = sext i32 %add3 to i64, !EFFECT !{metadata !"INCREMENT", i32* %i, i64 1}
  call void @checkLessThan(i64 -1, i64 %idxprom4), !VarName !{i64 -1, i32 %add3}
  call void @checkLessThan(i64 %idxprom4, i64 100), !VarName !{i32 %add3, i64 100}
  %arrayidx5 = getelementptr inbounds [100 x i32]* %a, i32 0, i64 %idxprom4
  store i32 %3, i32* %arrayidx5, align 4
  %5 = load i32* %temp, align 4, !EFFECT !{metadata !"UNCHANGED", i32* %temp, i64 0}
  %6 = load i32* %i, align 4, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  %idxprom6 = sext i32 %6 to i64, !EFFECT !{metadata !"UNCHANGED", i32* %i, i64 0}
  call void @checkLessThan(i64 -1, i64 %idxprom6), !VarName !{i64 -1, i32* %i}
  call void @checkLessThan(i64 %idxprom6, i64 100), !VarName !{i32* %i, i64 99}
  %arrayidx7 = getelementptr inbounds [100 x i32]* %a, i32 0, i64 %idxprom6
  store i32 %5, i32* %arrayidx7, align 4
  ret i32 0
}

declare void @checkLessThan(i64, i64)
